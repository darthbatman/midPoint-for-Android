package com.example.nikhil.myapplication;import android.location.Address;import android.location.Geocoder;import android.os.AsyncTask;import android.support.v7.app.ActionBarActivity;import android.os.Bundle;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.ArrayAdapter;import android.widget.EditText;import android.widget.Button;import android.widget.ListAdapter;import android.widget.ListView;import android.widget.Toast;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.ArrayList;import java.util.List;import java.util.Locale;import com.google.android.gms.maps.model.LatLng;public class AddLocations extends ActionBarActivity {    // References to GUI objects declared in XML    EditText addLocationET;    EditText typeET;    Button addToListViewButton;    Button submitButton;    ListView locationsListView;    // Some global (type) variables that may be needed in many functions    String userLocationInput;   // what the user enters in addLocationET    ArrayList userLocationInputArray = new ArrayList(); // array to hold all inputs    ArrayList latLngArray = new ArrayList();    // stores all the LatLngs after they are parsed; this is passed to map through SharedPrefs    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_add_locations);        // Initialize the references to GUI objects        addLocationET = (EditText) findViewById(R.id.addressEditText);        typeET = (EditText) findViewById(R.id.typeEditText);        addToListViewButton = (Button) findViewById(R.id.addButton);        submitButton = (Button) findViewById(R.id.submitButton);        locationsListView = (ListView) findViewById(R.id.listView);        userLocationInput = ""; // make sure its not null    }    // Button listener for the "addToListViewButton"    // This function does the following:    // 1. Get the user's input    // 2. Put it into the ListView    // 3. Geocode the user's input into a LatLng    // 4. Store said LatLng into a SharedPreferences - this same SharedPrefs will be used to plot the pins on the map later.    public void onAddButtonClick(View view) {        // 1. Get the user's input        userLocationInput = addLocationET.getText().toString();        // Add to the ArrayList        userLocationInputArray.add(userLocationInput);        // Create an ArrayAdapter to convert array into ListView & attach it to the ListView        ListAdapter adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, userLocationInputArray);        locationsListView.setAdapter(adapter);        // Access the GeocoderTask to geocode//        GeocoderTask geocoderTask = new GeocoderTask();//        geocoderTask.execute();        Geocoder geocoder = new Geocoder(this, Locale.getDefault());        try {            // List of addresses, we only use 1            List<Address> addressList = geocoder.getFromLocationName(userLocationInput, 1);            // Get the first (and only) address in this list            Address address = addressList.get(0);            // Get the latitude and longitude from the address object            double lat = address.getLatitude();            double longdick = address.getLongitude();            LatLng userLocation = new LatLng(lat, longdick);            // Add the recently geocoded address to the ArrayList            userLocationInputArray.add(userLocation);            Log.i("Lat/Lng of Geocoded: ", Double.toString(lat) + Double.toString(longdick));        }        catch (IOException e) {            e.printStackTrace();        }    }}